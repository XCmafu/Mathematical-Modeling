%% 写论文，先对判断矩阵进行一致性检验，再计算权重，只有判断矩阵通过了一致性检验，其权重才是有意义的。
%% 代码中，先计算了权重，再进行了一致性检验，为了顺应计算过程（已改，先进行特征值算法的一致性检验，再计算权重）
clear;clc
% 输入判断矩阵
% disp('请输入判断矩阵M： ')
% M = input('M=') % 对角线相乘为1
  M =[1 27/23 27/14 27/8 27/6;
 23/27 1 23/14 23/8 23/6;
 14/27 14/23 1 14/8 14/6;
 8/27 8/23 14/8 1 8/6;
 6/27 6/23 6/14 6/8 1];

% 计算一致性比例CR，修改后，先一致性检验
n = size( M, 1);
[E,D] = eig(M);    % E：特征向量, D：由特征值构成的对角矩阵
Max_eig = max(max(D));
CI = (Max_eig-n) / (n-1); % 一致性指标
RI = [0 0 0.52 0.89 1.12 1.26 1.36 1.41 1.46 1.49 1.52 1.54 1.56 1.58 1.59]; 
CR = CI/RI(n); % 一致性比例
disp('一致性指标CI=') 
disp(CI);
disp('一致性比例CR=')
disp(CR);
if CR < 0.10
    disp('一致性可以接受'); % CR < 0.10
else
    disp('判断矩阵不符合要求');
end

% 方法1：算术平均法求权重
% 将判断矩阵按照列归一化（每一个元素除以其所在列的和）
SUM_column = sum(M);
n = size( M, 1); 
SUM_M = repmat( SUM_column, n, 1);   % 扩展成 n*n 矩阵
Normalize_M = M ./ SUM_M;
% 将归一化矩阵按行求和，得到的向量中每个元素除以n即可得到权重向量
disp('算术平均法求权重的结果为：')
disp(sum( Normalize_M, 2) ./ n)
W1 = sum( Normalize_M, 2) ./ n;

% 方法2：几何平均法求权重
Product_row = prod( M, 2);  % 将M的元素按照行相乘得到一个新的列向量
Prduct_row_n = Product_row .^ (1/n);  % 将向量的每个元素开n次方
% 对该列向量进行归一化得到权重向量
disp('几何平均法求权重的结果为：')
disp( Prduct_row_n ./ sum(Prduct_row_n))
W2 = Prduct_row_n ./ sum(Prduct_row_n);

% 方法3：特征值法求权重
% 求出矩阵M的最大特征值以及其对应的特征向量
[E,D] = eig(M);    % E：特征向量, D：由特征值构成的对角矩阵
% 找到第一个最大特征值所在的位置
Max_eig = max(max(D)); 
% D == Max_eig;
[r,c] = find( D == Max_eig, 1);
% 对求出的特征向量进行归一化即可得到权重
disp('特征值法求权重的结果为：')
disp(E(:,c) ./ sum(E(:,c)))
W3 = E(:,c) ./ sum(E(:,c));

disp('最终权重的结果为：')
disp((W1+W2+W3)/3)